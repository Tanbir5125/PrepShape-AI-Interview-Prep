{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["file:///Users/tannu/Desktop/Project/interview_prep/firebase/admin.ts"],"sourcesContent":["import { cert, getApps, initializeApp } from \"firebase-admin/app\"\nimport { getAuth } from \"firebase-admin/auth\";\nimport { getFirestore } from \"firebase-admin/firestore\";\n\nconst initFirebaseAdmin = () => {\n    const apps = getApps();\n\n    if(!apps.length){\n        initializeApp({\n            credential: cert({\n                projectId: process.env.FIREBASE_PROJECT_ID,\n                clientEmail: process.env.FIREBASE_CLIENT_EMAIL,\n                privateKey: process.env.FIREBASE_PRIVATE_KEY?.replace(/\\\\n/g, \"\\n\"),\n            })\n        })\n    }\n    return {\n        auth: getAuth(),\n        db: getFirestore()\n    }\n}\n\nexport const {auth, db} = initFirebaseAdmin();"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;;;;;;AAEA,MAAM,oBAAoB;IACtB,MAAM,OAAO,CAAA,GAAA,gJAAA,CAAA,UAAO,AAAD;IAEnB,IAAG,CAAC,KAAK,MAAM,EAAC;QACZ,CAAA,GAAA,gJAAA,CAAA,gBAAa,AAAD,EAAE;YACV,YAAY,CAAA,GAAA,gJAAA,CAAA,OAAI,AAAD,EAAE;gBACb,WAAW,QAAQ,GAAG,CAAC,mBAAmB;gBAC1C,aAAa,QAAQ,GAAG,CAAC,qBAAqB;gBAC9C,YAAY,QAAQ,GAAG,CAAC,oBAAoB,EAAE,QAAQ,QAAQ;YAClE;QACJ;IACJ;IACA,OAAO;QACH,MAAM,CAAA,GAAA,kJAAA,CAAA,UAAO,AAAD;QACZ,IAAI,CAAA,GAAA,4JAAA,CAAA,eAAY,AAAD;IACnB;AACJ;AAEO,MAAM,EAAC,IAAI,EAAE,EAAE,EAAC,GAAG","debugId":null}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":["file:///Users/tannu/Desktop/Project/interview_prep/lib/actions/auth.action.ts"],"sourcesContent":["\"use server\";\n\nimport { auth, db } from \"@/firebase/admin\";\nimport { cookies } from \"next/headers\";\n\nconst ONE_WEEK = 60 * 60 * 24 * 7; // 7 days\n\nexport async function signUp(params: SignUpParams) {\n  const { uid, name, email } = params;\n\n  try {\n    const userRecord = await db.collection(\"users\").doc(uid).get();\n\n    if (userRecord.exists) {\n      return {\n        success: false,\n        message: \"User already exists. Please sign in.\",\n      };\n    }\n    await db.collection(\"users\").doc(uid).set({\n      name,\n      email,\n    });\n\n    return {\n      success: true,\n      message: \"Account created successfully\",\n    };\n  } catch (error: any) {\n    console.error(\"Error during sign up:\", error);\n\n    if (error.code === \"auth/email-already-exists\") {\n      return {\n        success: false,\n        message: \"This email is already in use.\",\n      };\n    }\n    return {\n      success: false,\n      message: \"Failed to create an account\",\n    };\n  }\n}\n\nexport async function signIn(params: SignInParams) {\n  const { email, idToken } = params;\n\n  try {\n    const userRecord = await auth.getUserByEmail(email);\n\n    if (!userRecord) {\n      return {\n        success: false,\n        message: \"User not found. Please sign up.\",\n      };\n    }\n\n    await setSessionCookie(idToken);\n  } catch (error) {\n    console.error(error);\n    return {\n      success: false,\n      message: \"Failed to sign in\",\n    };\n  }\n}\n\nexport async function setSessionCookie(idToken: string) {\n  const cookieStore = await cookies();\n\n  const sessionCookie = await auth.createSessionCookie(idToken, {\n    expiresIn: ONE_WEEK * 1000, // Convert to milliseconds\n  });\n\n  cookieStore.set(\"session\", sessionCookie, {\n    maxAge: ONE_WEEK,\n    httpOnly: true,\n    secure: process.env.NODE_ENV === \"production\",\n    path: \"/\",\n    sameSite: \"lax\",\n  });\n}\n\nexport async function getCurrentUser(): Promise<User | null> {\n  const cookieStore = await cookies();\n\n  const sessionCookie = cookieStore.get(\"session\")?.value;\n  if (!sessionCookie) return null;\n\n  try {\n    const decodedClaims = await auth.verifySessionCookie(sessionCookie, true);\n\n    // get user info from db\n    const userRecord = await db\n      .collection(\"users\")\n      .doc(decodedClaims.uid)\n      .get();\n    if (!userRecord.exists) return null;\n\n    return {\n      ...userRecord.data(),\n      id: userRecord.id,\n    } as User;\n  } catch (error) {\n    console.log(error);\n\n    // Invalid or expired session\n    return null;\n  }\n}\n\nexport async function isAuthenticated() {\n  const user = await getCurrentUser();\n\n  return !!user;\n}\n\n\n"],"names":[],"mappings":";;;;;;;;;AAEA;AACA;;;;;;;;;;AAEA,MAAM,WAAW,KAAK,KAAK,KAAK,GAAG,SAAS;AAErC,eAAe,OAAO,MAAoB;IAC/C,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG;IAE7B,IAAI;QACF,MAAM,aAAa,MAAM,iHAAA,CAAA,KAAE,CAAC,UAAU,CAAC,SAAS,GAAG,CAAC,KAAK,GAAG;QAE5D,IAAI,WAAW,MAAM,EAAE;YACrB,OAAO;gBACL,SAAS;gBACT,SAAS;YACX;QACF;QACA,MAAM,iHAAA,CAAA,KAAE,CAAC,UAAU,CAAC,SAAS,GAAG,CAAC,KAAK,GAAG,CAAC;YACxC;YACA;QACF;QAEA,OAAO;YACL,SAAS;YACT,SAAS;QACX;IACF,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,yBAAyB;QAEvC,IAAI,MAAM,IAAI,KAAK,6BAA6B;YAC9C,OAAO;gBACL,SAAS;gBACT,SAAS;YACX;QACF;QACA,OAAO;YACL,SAAS;YACT,SAAS;QACX;IACF;AACF;AAEO,eAAe,OAAO,MAAoB;IAC/C,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG;IAE3B,IAAI;QACF,MAAM,aAAa,MAAM,iHAAA,CAAA,OAAI,CAAC,cAAc,CAAC;QAE7C,IAAI,CAAC,YAAY;YACf,OAAO;gBACL,SAAS;gBACT,SAAS;YACX;QACF;QAEA,MAAM,iBAAiB;IACzB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC;QACd,OAAO;YACL,SAAS;YACT,SAAS;QACX;IACF;AACF;AAEO,eAAe,iBAAiB,OAAe;IACpD,MAAM,cAAc,MAAM,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAEhC,MAAM,gBAAgB,MAAM,iHAAA,CAAA,OAAI,CAAC,mBAAmB,CAAC,SAAS;QAC5D,WAAW,WAAW;IACxB;IAEA,YAAY,GAAG,CAAC,WAAW,eAAe;QACxC,QAAQ;QACR,UAAU;QACV,QAAQ,oDAAyB;QACjC,MAAM;QACN,UAAU;IACZ;AACF;AAEO,eAAe;IACpB,MAAM,cAAc,MAAM,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAEhC,MAAM,gBAAgB,YAAY,GAAG,CAAC,YAAY;IAClD,IAAI,CAAC,eAAe,OAAO;IAE3B,IAAI;QACF,MAAM,gBAAgB,MAAM,iHAAA,CAAA,OAAI,CAAC,mBAAmB,CAAC,eAAe;QAEpE,wBAAwB;QACxB,MAAM,aAAa,MAAM,iHAAA,CAAA,KAAE,CACxB,UAAU,CAAC,SACX,GAAG,CAAC,cAAc,GAAG,EACrB,GAAG;QACN,IAAI,CAAC,WAAW,MAAM,EAAE,OAAO;QAE/B,OAAO;YACL,GAAG,WAAW,IAAI,EAAE;YACpB,IAAI,WAAW,EAAE;QACnB;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,GAAG,CAAC;QAEZ,6BAA6B;QAC7B,OAAO;IACT;AACF;AAEO,eAAe;IACpB,MAAM,OAAO,MAAM;IAEnB,OAAO,CAAC,CAAC;AACX;;;IA5GsB;IAqCA;IAuBA;IAgBA;IA4BA;;AAxGA,+OAAA;AAqCA,+OAAA;AAuBA,+OAAA;AAgBA,+OAAA;AA4BA,+OAAA","debugId":null}},
    {"offset": {"line": 205, "column": 0}, "map": {"version":3,"sources":["file:///Users/tannu/Desktop/Project/interview_prep/app/%28root%29/layout.tsx"],"sourcesContent":["import { isAuthenticated } from \"@/lib/actions/auth.action\";\nimport Image from \"next/image\";\nimport Link from \"next/link\";\nimport { redirect } from \"next/navigation\";\nimport { ReactNode } from \"react\";\n\nconst RootLayout = async ({ children }: { children: ReactNode }) => {\n  const isUserAuthenticated = await isAuthenticated();\n\n  if (!isUserAuthenticated) redirect(\"/sign-in\");\n    return (\n      <div className=\"root-layout\">\n        <nav>\n          <Link href=\"/\" className=\"flex items-center gap-2\">\n            <Image src=\"/logo.png\" alt=\"logo\" width={38} height={32} />\n            <h2 className=\"text-primary-100\">PrepShape</h2>\n          </Link>\n        </nav>\n        {children}\n      </div>\n    );\n};\n\nexport default RootLayout;\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AAAA;;;;;;;;;;AAGA,MAAM,aAAa,OAAO,EAAE,QAAQ,EAA2B;IAC7D,MAAM,sBAAsB,MAAM,CAAA,GAAA,gIAAA,CAAA,kBAAe,AAAD;IAEhD,IAAI,CAAC,qBAAqB,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;0BACC,cAAA,8OAAC,4JAAA,CAAA,UAAI;oBAAC,MAAK;oBAAI,WAAU;;sCACvB,8OAAC,6HAAA,CAAA,UAAK;4BAAC,KAAI;4BAAY,KAAI;4BAAO,OAAO;4BAAI,QAAQ;;;;;;sCACrD,8OAAC;4BAAG,WAAU;sCAAmB;;;;;;;;;;;;;;;;;YAGpC;;;;;;;AAGT;uCAEe","debugId":null}}]
}